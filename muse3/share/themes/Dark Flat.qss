QWidget {
    background-color: rgb(40,40,40);
    color: rgb(220,220,220);
}

QToolButton {
    border: 1px solid rgb(90,90,90);
    border-radius: 0px;
}

QPushButton {
    border: 1px solid rgb(90,90,90);
    border-radius: 0px;
    padding: 3px;
}

QToolButton:pressed, QToolButton:checked, 
QPushButton:pressed, QPushButton:checked {
    background-color: rgb(0,90,160);
}

/*
QDialogButtonBox QAbstractButton {
    border: 1px solid rgb(90,90,90);
    border-radius: 0px;
}
*/

QWidget:!enabled {
    color: rgb(100,100,100);
}

/* QWhatsThat doesn't work at the moment (known problem)
 * Just in case Qt implements it in future... */
QToolTip, QWhatsThat {
    background-color: rgb(190,190,190);
    color: rgb(30,30,30);
    font-size: 10pt;
}   
    
QMenu::item:selected {
    background-color: rgb(0,90,160);
}

QToolBar QToolButton {
    background-color: rgb(90,90,90);
	margin-right: 1px;
/*
    border-color: rgb(90,90,90);
*/
    border-style: none;
    border-width: 0px;
    border-radius: 0px;
    padding: 2px;
}

QToolBar QToolButton:checked {
    background-color: rgb(0,90,160);
    border-style: none;
    border-width: 0px;
    border-radius: 0px;
    padding: 2px;
}

QToolBar QToolButton:hover {
    border-color: Yellow;
    border-top-style: solid;
    border-width: 2px;
    border-radius: 0px;
    padding-top: 0px;
}

QToolBar QToolButton:pressed {
    border-color: Orange;
    border-top-style: solid;
    border-width: 2px;
    border-radius: 0px;
    padding-top: 0px;
}

QToolBar QToolButton[popupMode="1"] {
    padding-right: 16px;
}
QToolBar QToolButton::menu-button {
    border-radius: 0px;
    border-left: 1px solid rgb(40,40,40);
    width: 13px;
}


QToolBar QAbstractSpinBox {
    background-color: rgb(40,40,40);
/*
    color: DeepSkyBlue;
*/
    color: rgb(0,140,210);
    border-radius: 0px;
    height: 20px;    
    border: 1px solid rgb(90,90,90);
}

QToolBar QAbstractSpinBox::up-button { 
    width: 16px;
    border: none;
}

QToolBar QAbstractSpinBox::down-button { 
    width: 16px;
    border: none;
}
   
QToolBar QAbstractSpinBox::up-arrow { 
    image: url(:/svg/up_arrow.svg);
    width: 8px;
}

QToolBar QAbstractSpinBox::down-arrow { 
    image: url(:/svg/down_arrow.svg);
    width: 8px;
}

QToolBar QAbstractSpinBox::up-arrow:disabled, QToolBar QAbstractSpinBox::down-arrow:disabled {
    image: none;
}

QToolBar QComboBox {
    background-color: rgb(40,40,40);
/*
    color: DeepSkyBlue;
*/
    color: rgb(0,140,210);
    border: 1px solid rgb(90,90,90);
    padding: 1px;
}

QToolBar QComboBox::drop-down {
    background-color: rgb(40,40,40);
    border: none;
}

QToolBar QComboBox::down-arrow { 
    image: url(:/svg/down_arrow.svg);
    width: 10px;
}

/* does not work as documented (Qt 5.9) */
QToolBar QComboBox QAbstractItemView {
    color: rgb(220,220,220);
    selection-background-color: rgb(0,90,160);
}

QToolBar QLabel#PosLabel, 
QToolBar QLabel#PitchLabel,
QToolBar QLabel#TempoLabel,
QToolBar QLabel#PaddedValueLabel {
    background-color: rgb(40,40,40);
    border: 1px solid rgb(90,90,90);
}

QWidget#Rack {
    border: 1px solid rgb(0,120,200);
}

QFrame#Strip {
    border: 1px solid rgb(90,90,90);
/* does not work
    border-right: 1px solid rgb(90,90,90);
    border-left: 1px solid rgb(90,90,90);
*/
}

QTreeView, QListView {
    alternate-background-color: rgb(60,60,60);
    background: rgb(30,30,30);
 }
 
/* The title header background colour in popup and routing menus: */
MusEGui--MenuTitleLabel {
    background-color: Maroon;
}

/* The category item background colour in the advanced router trees: */
MusEGui--RouteTreeWidget {
    qproperty-categoryColor: Maroon;
}

MusEGui--SnooperDialog {
    qproperty-flashColor: Maroon;
}

MusEGui--TList {
    qproperty-sel3d: false;
    qproperty-curSelBorder: true;
}

MusEGui--AudioStripProperties {
    qproperty-sliderRadius: 1;
    qproperty-sliderRadiusHandle: 1;
    qproperty-sliderHandleHeight: 26;
    qproperty-sliderHandleWidth: 14;
    qproperty-sliderGrooveWidth: 6;
/* draw groove part above the handle */
    qproperty-sliderFillOver: true; 
    qproperty-sliderUseGradient: false;
/* None = 0, Left = 1, Right = 2, InsideVertical = 6 */
    qproperty-sliderScalePos: 2; 
/* draw vertical line in slider scale
    qproperty-sliderBackbone: true; 
*/
    qproperty-meterWidth: 10;
/* apply meterWidth for each channel
    qproperty-meterWidthPerChannel: true;
*/
}

MusEGui--MidiStripProperties {
    qproperty-sliderRadius: 1;
    qproperty-sliderRadiusHandle: 1;
    qproperty-sliderHandleHeight: 26;
    qproperty-sliderHandleWidth: 14;
    qproperty-sliderGrooveWidth: 6;
/* draw groove part above the handle */
    qproperty-sliderFillOver: true; 
    qproperty-sliderUseGradient: false;
/* None = 0, Left = 1, Right = 2, InsideVertical = 6 */
    qproperty-sliderScalePos: 2; 
/* draw vertical line in slider scale
    qproperty-sliderBackbone: true;
*/
    qproperty-meterWidth: 10;
}

MusEGui--Meter {
    qproperty-radius: 1;
    qproperty-vu3d: false;
}

MusEGui--TrackNameLabel {
    qproperty-style3d: false;
}

MusEGui--EffectRack {
    qproperty-style3d: false;
    qproperty-radius: 0;
  /* use smaller non-standard scrollbar */
/*
    qproperty-customScrollbar: false;
*/
}

MusEGui--CompactSlider {
    qproperty-barSameColor: true;
    qproperty-radius: 0;
}

MusEGui--ElidedLabel {
    qproperty-radius: 0;
    qproperty-style3d: false;
}

MusEGui--PaletteSwitcher {
    qproperty-radius: 0;
    qproperty-style3d: false;
}

MusEGui--CompactPatchEdit {
    qproperty-radius: 0;
    qproperty-style3d: false;
}

MusEGui--CompactKnob {
    qproperty-style3d: false;
    qproperty-radius: 0;
/*
    qproperty-xMargin: 5;
    qproperty-yMargin: 5;
    qproperty-borderWidth: 0;
    qproperty-knobWidth: 50;
*/
}

MusEGui--DList {
/* 0-255, sensible values 0-64 */
    qproperty-alphaOverlay: 32; 
}

MusEGui--CtrlCanvas {
/* 0-255, sensible values 0-64 */
    qproperty-bgAlpha: 0; 
}

MusEGui--Strip {
    qproperty-expanderWidth: 1;
}
